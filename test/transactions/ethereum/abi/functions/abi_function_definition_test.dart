import 'package:codec_utils/src/codecs/hex/hex_codec.dart';
import 'package:cryptography_utils/src/transactions/ethereum/abi/functions/abi_function_definition.dart';
import 'package:cryptography_utils/src/transactions/ethereum/abi/functions/abi_param_definition.dart';
import 'package:cryptography_utils/src/transactions/ethereum/abi/solidity_types/solidity_address_type.dart';
import 'package:cryptography_utils/src/transactions/ethereum/abi/solidity_types/solidity_bool_type.dart';
import 'package:cryptography_utils/src/transactions/ethereum/abi/solidity_types/solidity_bytes_type.dart';
import 'package:cryptography_utils/src/transactions/ethereum/abi/solidity_types/solidity_dynamic_array_type.dart';
import 'package:cryptography_utils/src/transactions/ethereum/abi/solidity_types/solidity_int_type.dart';
import 'package:cryptography_utils/src/transactions/ethereum/abi/solidity_types/solidity_static_array_type.dart';
import 'package:cryptography_utils/src/transactions/ethereum/abi/solidity_types/solidity_string_type.dart';
import 'package:cryptography_utils/src/transactions/ethereum/abi/solidity_types/solidity_tuple_type.dart';
import 'package:test/test.dart';

void main() {
  AbiFunctionDefinition actualAbiFunctionDefinition = AbiFunctionDefinition(
    name: 'test_function',
    type: 'function',
    inputs: <AbiParamDefinition>[
      AbiParamDefinition(name: 'address', type: SolidityAddressType()),
      AbiParamDefinition(name: 'bool', type: SolidityBoolType()),
      AbiParamDefinition(name: 'bytes', type: SolidityBytesType('bytes')),
      AbiParamDefinition(name: 'dynamic_array', type: SolidityDynamicArrayType('int256[]')),
      AbiParamDefinition(name: 'nested_dynamic_array', type: SolidityDynamicArrayType('int256[][]')),
      AbiParamDefinition(name: 'int', type: SolidityIntType('int256')),
      AbiParamDefinition(name: 'uint', type: SolidityIntType('uint256')),
      AbiParamDefinition(name: 'static_array', type: SolidityStaticArrayType('int256[10]')),
      AbiParamDefinition(name: 'nested_static_array', type: SolidityStaticArrayType('int256[3][3]')),
      AbiParamDefinition(name: 'string', type: SolidityStringType()),
      AbiParamDefinition(
        name: 'tuple',
        type: SolidityTupleType(
          <AbiParamDefinition>[
            AbiParamDefinition(name: 'address', type: SolidityAddressType()),
            AbiParamDefinition(name: 'bool', type: SolidityBoolType()),
            AbiParamDefinition(name: 'bytes', type: SolidityBytesType('bytes')),
            AbiParamDefinition(name: 'dynamic_array', type: SolidityDynamicArrayType('int256[]')),
            AbiParamDefinition(name: 'nested_dynamic_array', type: SolidityDynamicArrayType('int256[][]')),
            AbiParamDefinition(name: 'int', type: SolidityIntType('int256')),
            AbiParamDefinition(name: 'uint', type: SolidityIntType('uint256')),
            AbiParamDefinition(name: 'static_array', type: SolidityStaticArrayType('int256[10]')),
            AbiParamDefinition(name: 'nested_static_array', type: SolidityStaticArrayType('int256[3][3]')),
            AbiParamDefinition(name: 'string', type: SolidityStringType()),
            AbiParamDefinition(
              name: 'nested_tuple',
              type: SolidityTupleType(<AbiParamDefinition>[
                AbiParamDefinition(name: 'address', type: SolidityAddressType()),
                AbiParamDefinition(name: 'bool', type: SolidityBoolType()),
                AbiParamDefinition(name: 'bytes', type: SolidityBytesType('bytes')),
                AbiParamDefinition(name: 'dynamic_array', type: SolidityDynamicArrayType('int256[]')),
                AbiParamDefinition(name: 'nested_dynamic_array', type: SolidityDynamicArrayType('int256[][]')),
                AbiParamDefinition(name: 'int', type: SolidityIntType('int256')),
                AbiParamDefinition(name: 'uint', type: SolidityIntType('uint256')),
                AbiParamDefinition(name: 'static_array', type: SolidityStaticArrayType('int256[10]')),
                AbiParamDefinition(name: 'nested_static_array', type: SolidityStaticArrayType('int256[3][3]')),
                AbiParamDefinition(name: 'string', type: SolidityStringType()),
              ]),
            )
          ],
        ),
      ),
    ],
  );

  group('Tests of AbiFunctionDefinition.decodeParameters()', () {
    test('Should [return decoded function parameters] from given bytes', () {
      // Arrange
      List<int> actualBytes = HexCodec.decode(
        '0x'
        '00000000000000000000000053bf0a18754873a8102625d8225af6a15a43423c'
        '0000000000000000000000000000000000000000000000000000000000000001'
        '0000000000000000000000000000000000000000000000000000000000000380'
        '00000000000000000000000000000000000000000000000000000000000003c0'
        '0000000000000000000000000000000000000000000000000000000000000500'
        'fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb2e'
        '00000000000000000000000000000000000000000000000000000000000010e1'
        '0000000000000000000000000000000000000000000000000000000000000001'
        '0000000000000000000000000000000000000000000000000000000000000002'
        '0000000000000000000000000000000000000000000000000000000000000003'
        '0000000000000000000000000000000000000000000000000000000000000004'
        '0000000000000000000000000000000000000000000000000000000000000005'
        '0000000000000000000000000000000000000000000000000000000000000006'
        '0000000000000000000000000000000000000000000000000000000000000007'
        '0000000000000000000000000000000000000000000000000000000000000008'
        '0000000000000000000000000000000000000000000000000000000000000009'
        '000000000000000000000000000000000000000000000000000000000000000a'
        '0000000000000000000000000000000000000000000000000000000000000001'
        '0000000000000000000000000000000000000000000000000000000000000002'
        '0000000000000000000000000000000000000000000000000000000000000003'
        '0000000000000000000000000000000000000000000000000000000000000004'
        '0000000000000000000000000000000000000000000000000000000000000005'
        '0000000000000000000000000000000000000000000000000000000000000006'
        '0000000000000000000000000000000000000000000000000000000000000007'
        '0000000000000000000000000000000000000000000000000000000000000008'
        '0000000000000000000000000000000000000000000000000000000000000009'
        '0000000000000000000000000000000000000000000000000000000000000700'
        '0000000000000000000000000000000000000000000000000000000000000740'
        '0000000000000000000000000000000000000000000000000000000000000004'
        'c0a8000100000000000000000000000000000000000000000000000000000000'
        '0000000000000000000000000000000000000000000000000000000000000009'
        '0000000000000000000000000000000000000000000000000000000000000001'
        '0000000000000000000000000000000000000000000000000000000000000002'
        '0000000000000000000000000000000000000000000000000000000000000003'
        '0000000000000000000000000000000000000000000000000000000000000004'
        '0000000000000000000000000000000000000000000000000000000000000005'
        '0000000000000000000000000000000000000000000000000000000000000006'
        '0000000000000000000000000000000000000000000000000000000000000007'
        '0000000000000000000000000000000000000000000000000000000000000008'
        '0000000000000000000000000000000000000000000000000000000000000009'
        '0000000000000000000000000000000000000000000000000000000000000003'
        '0000000000000000000000000000000000000000000000000000000000000060'
        '00000000000000000000000000000000000000000000000000000000000000e0'
        '0000000000000000000000000000000000000000000000000000000000000160'
        '0000000000000000000000000000000000000000000000000000000000000003'
        '0000000000000000000000000000000000000000000000000000000000000001'
        '0000000000000000000000000000000000000000000000000000000000000002'
        '0000000000000000000000000000000000000000000000000000000000000003'
        '0000000000000000000000000000000000000000000000000000000000000003'
        '0000000000000000000000000000000000000000000000000000000000000004'
        '0000000000000000000000000000000000000000000000000000000000000005'
        '0000000000000000000000000000000000000000000000000000000000000006'
        '0000000000000000000000000000000000000000000000000000000000000003'
        '0000000000000000000000000000000000000000000000000000000000000007'
        '0000000000000000000000000000000000000000000000000000000000000008'
        '0000000000000000000000000000000000000000000000000000000000000009'
        '000000000000000000000000000000000000000000000000000000000000000d'
        '48656c6c6f2c20576f726c642100000000000000000000000000000000000000'
        '00000000000000000000000053bf0a18754873a8102625d8225af6a15a43423c'
        '0000000000000000000000000000000000000000000000000000000000000001'
        '0000000000000000000000000000000000000000000000000000000000000380'
        '00000000000000000000000000000000000000000000000000000000000003c0'
        '0000000000000000000000000000000000000000000000000000000000000500'
        'fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb2e'
        '00000000000000000000000000000000000000000000000000000000000010e1'
        '0000000000000000000000000000000000000000000000000000000000000001'
        '0000000000000000000000000000000000000000000000000000000000000002'
        '0000000000000000000000000000000000000000000000000000000000000003'
        '0000000000000000000000000000000000000000000000000000000000000004'
        '0000000000000000000000000000000000000000000000000000000000000005'
        '0000000000000000000000000000000000000000000000000000000000000006'
        '0000000000000000000000000000000000000000000000000000000000000007'
        '0000000000000000000000000000000000000000000000000000000000000008'
        '0000000000000000000000000000000000000000000000000000000000000009'
        '000000000000000000000000000000000000000000000000000000000000000a'
        '0000000000000000000000000000000000000000000000000000000000000001'
        '0000000000000000000000000000000000000000000000000000000000000002'
        '0000000000000000000000000000000000000000000000000000000000000003'
        '0000000000000000000000000000000000000000000000000000000000000004'
        '0000000000000000000000000000000000000000000000000000000000000005'
        '0000000000000000000000000000000000000000000000000000000000000006'
        '0000000000000000000000000000000000000000000000000000000000000007'
        '0000000000000000000000000000000000000000000000000000000000000008'
        '0000000000000000000000000000000000000000000000000000000000000009'
        '0000000000000000000000000000000000000000000000000000000000000700'
        '0000000000000000000000000000000000000000000000000000000000000740'
        '0000000000000000000000000000000000000000000000000000000000000004'
        'c0a8000100000000000000000000000000000000000000000000000000000000'
        '0000000000000000000000000000000000000000000000000000000000000009'
        '0000000000000000000000000000000000000000000000000000000000000001'
        '0000000000000000000000000000000000000000000000000000000000000002'
        '0000000000000000000000000000000000000000000000000000000000000003'
        '0000000000000000000000000000000000000000000000000000000000000004'
        '0000000000000000000000000000000000000000000000000000000000000005'
        '0000000000000000000000000000000000000000000000000000000000000006'
        '0000000000000000000000000000000000000000000000000000000000000007'
        '0000000000000000000000000000000000000000000000000000000000000008'
        '0000000000000000000000000000000000000000000000000000000000000009'
        '0000000000000000000000000000000000000000000000000000000000000003'
        '0000000000000000000000000000000000000000000000000000000000000060'
        '00000000000000000000000000000000000000000000000000000000000000e0'
        '0000000000000000000000000000000000000000000000000000000000000160'
        '0000000000000000000000000000000000000000000000000000000000000003'
        '0000000000000000000000000000000000000000000000000000000000000001'
        '0000000000000000000000000000000000000000000000000000000000000002'
        '0000000000000000000000000000000000000000000000000000000000000003'
        '0000000000000000000000000000000000000000000000000000000000000003'
        '0000000000000000000000000000000000000000000000000000000000000004'
        '0000000000000000000000000000000000000000000000000000000000000005'
        '0000000000000000000000000000000000000000000000000000000000000006'
        '0000000000000000000000000000000000000000000000000000000000000003'
        '0000000000000000000000000000000000000000000000000000000000000007'
        '0000000000000000000000000000000000000000000000000000000000000008'
        '0000000000000000000000000000000000000000000000000000000000000009'
        '000000000000000000000000000000000000000000000000000000000000000d'
        '48656c6c6f2c20576f726c642100000000000000000000000000000000000000'
        '00000000000000000000000053bf0a18754873a8102625d8225af6a15a43423c'
        '0000000000000000000000000000000000000000000000000000000000000001'
        '0000000000000000000000000000000000000000000000000000000000000360'
        '00000000000000000000000000000000000000000000000000000000000003a0'
        '00000000000000000000000000000000000000000000000000000000000004e0'
        'fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb2e'
        '00000000000000000000000000000000000000000000000000000000000010e1'
        '0000000000000000000000000000000000000000000000000000000000000001'
        '0000000000000000000000000000000000000000000000000000000000000002'
        '0000000000000000000000000000000000000000000000000000000000000003'
        '0000000000000000000000000000000000000000000000000000000000000004'
        '0000000000000000000000000000000000000000000000000000000000000005'
        '0000000000000000000000000000000000000000000000000000000000000006'
        '0000000000000000000000000000000000000000000000000000000000000007'
        '0000000000000000000000000000000000000000000000000000000000000008'
        '0000000000000000000000000000000000000000000000000000000000000009'
        '000000000000000000000000000000000000000000000000000000000000000a'
        '0000000000000000000000000000000000000000000000000000000000000001'
        '0000000000000000000000000000000000000000000000000000000000000002'
        '0000000000000000000000000000000000000000000000000000000000000003'
        '0000000000000000000000000000000000000000000000000000000000000004'
        '0000000000000000000000000000000000000000000000000000000000000005'
        '0000000000000000000000000000000000000000000000000000000000000006'
        '0000000000000000000000000000000000000000000000000000000000000007'
        '0000000000000000000000000000000000000000000000000000000000000008'
        '0000000000000000000000000000000000000000000000000000000000000009'
        '00000000000000000000000000000000000000000000000000000000000006e0'
        '0000000000000000000000000000000000000000000000000000000000000004'
        'c0a8000100000000000000000000000000000000000000000000000000000000'
        '0000000000000000000000000000000000000000000000000000000000000009'
        '0000000000000000000000000000000000000000000000000000000000000001'
        '0000000000000000000000000000000000000000000000000000000000000002'
        '0000000000000000000000000000000000000000000000000000000000000003'
        '0000000000000000000000000000000000000000000000000000000000000004'
        '0000000000000000000000000000000000000000000000000000000000000005'
        '0000000000000000000000000000000000000000000000000000000000000006'
        '0000000000000000000000000000000000000000000000000000000000000007'
        '0000000000000000000000000000000000000000000000000000000000000008'
        '0000000000000000000000000000000000000000000000000000000000000009'
        '0000000000000000000000000000000000000000000000000000000000000003'
        '0000000000000000000000000000000000000000000000000000000000000060'
        '00000000000000000000000000000000000000000000000000000000000000e0'
        '0000000000000000000000000000000000000000000000000000000000000160'
        '0000000000000000000000000000000000000000000000000000000000000003'
        '0000000000000000000000000000000000000000000000000000000000000001'
        '0000000000000000000000000000000000000000000000000000000000000002'
        '0000000000000000000000000000000000000000000000000000000000000003'
        '0000000000000000000000000000000000000000000000000000000000000003'
        '0000000000000000000000000000000000000000000000000000000000000004'
        '0000000000000000000000000000000000000000000000000000000000000005'
        '0000000000000000000000000000000000000000000000000000000000000006'
        '0000000000000000000000000000000000000000000000000000000000000003'
        '0000000000000000000000000000000000000000000000000000000000000007'
        '0000000000000000000000000000000000000000000000000000000000000008'
        '0000000000000000000000000000000000000000000000000000000000000009'
        '000000000000000000000000000000000000000000000000000000000000000d'
        '48656c6c6f2c20576f726c642100000000000000000000000000000000000000',
      );

      // Act
      Map<String, dynamic> actualFunctionParams = actualAbiFunctionDefinition.decodeParameters(actualBytes);

      // Assert
      Map<String, dynamic> expectedFunctionParams = <String, dynamic>{
        'address': '0x53bf0a18754873a8102625d8225af6a15a43423c',
        'bool': true,
        'bytes': <int>[192, 168, 0, 1],
        'dynamic_array': <String>['1', '2', '3', '4', '5', '6', '7', '8', '9'],
        'nested_dynamic_array': <List<String>>[
          <String>['1', '2', '3'],
          <String>['4', '5', '6'],
          <String>['7', '8', '9']
        ],
        'int': '115792089237316195423570985008687907853269984665640564039457584007913129638702',
        'uint': '4321',
        'static_array': <String>['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],
        'nested_static_array': <List<String>>[
          <String>['1', '2', '3'],
          <String>['4', '5', '6'],
          <String>['7', '8', '9']
        ],
        'string': 'Hello, World!',
        'tuple': <String, Object>{
          'address': '0x53bf0a18754873a8102625d8225af6a15a43423c',
          'bool': true,
          'bytes': <int>[192, 168, 0, 1],
          'dynamic_array': <String>['1', '2', '3', '4', '5', '6', '7', '8', '9'],
          'nested_dynamic_array': <List<String>>[
            <String>['1', '2', '3'],
            <String>['4', '5', '6'],
            <String>['7', '8', '9']
          ],
          'int': '115792089237316195423570985008687907853269984665640564039457584007913129638702',
          'uint': '4321',
          'static_array': <String>['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],
          'nested_static_array': <List<String>>[
            <String>['1', '2', '3'],
            <String>['4', '5', '6'],
            <String>['7', '8', '9']
          ],
          'string': 'Hello, World!',
          'nested_tuple': <String, Object>{
            'address': '0x53bf0a18754873a8102625d8225af6a15a43423c',
            'bool': true,
            'bytes': <int>[192, 168, 0, 1],
            'dynamic_array': <String>['1', '2', '3', '4', '5', '6', '7', '8', '9'],
            'nested_dynamic_array': <List<String>>[
              <String>['1', '2', '3'],
              <String>['4', '5', '6'],
              <String>['7', '8', '9']
            ],
            'int': '115792089237316195423570985008687907853269984665640564039457584007913129638702',
            'uint': '4321',
            'static_array': <String>['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],
            'nested_static_array': <List<String>>[
              <String>['1', '2', '3'],
              <String>['4', '5', '6'],
              <String>['7', '8', '9']
            ],
            'string': 'Hello, World!'
          }
        }
      };

      expect(actualFunctionParams, expectedFunctionParams);
    });
  });

  group('Tests of AbiFunctionDefinition.functionSelector getter ', () {
    test('Should [return function selector] for given AbiFunctionDefinition', () {
      // Act
      String actualFunctionSelector = actualAbiFunctionDefinition.functionSelector;

      // Assert
      String expectedFunctionSelector = '8677891c';

      expect(actualFunctionSelector, expectedFunctionSelector);
    });
  });

  group('Tests of AbiFunctionDefinition.functionSignature getter ', () {
    test('Should [return function signature] for given AbiFunctionDefinition', () {
      // Act
      String actualFunctionSignature = actualAbiFunctionDefinition.functionSignature;

      // Assert
      String expectedFunctionSignature =
          'test_function(address,bool,bytes,int256[],int256[][],int256,uint256,int256[10],int256[3][3],string,(address,bool,bytes,int256[],int256[][],int256,uint256,int256[10],int256[3][3],string,(address,bool,bytes,int256[],int256[][],int256,uint256,int256[10],int256[3][3],string)))';

      expect(actualFunctionSignature, expectedFunctionSignature);
    });
  });
}
